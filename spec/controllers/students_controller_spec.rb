require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe StudentsController do

  # This should return the minimal set of attributes required to create a valid
  # Student. As you add validations to Student, be sure to
  # adjust the attributes here as well.
  before(:each) do 
   @student = FactoryGirl.create(:student)  
   end
  
  # This should return the minimal set of values that should be in the session
  # in order to pass any filters (e.g. authentication) defined in
  # StudentsController. Be sure to keep this updated too.
  let(:valid_session) { {} }

 describe "GET CSV_UPLOAD" do
  it "renders csv upload template" do
      get :csv_upload
      expect(response).to render_template("csv_upload")
    end
  end
  
  describe "GET index" do
    it "assigns all students as @students" do
      get :index, {}, valid_session
      expect(assigns(:students)).to eq([@student])
    end
  end


  describe "POST upload" do
    describe "with valid file attribute" do
      it "upload a csv file" do
        @file_attribute = Rack::Test::UploadedFile.new('/home/webwerks/student_list.csv','text/csv')
        post :import_csv, :student =>{:file => @file_attribute}
        expect(response).to redirect_to root_path
      end
    end
  
  end
end